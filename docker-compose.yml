services:
  db:
    image: mysql:latest
    container_name: db-app
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: databse
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-app
    restart: always
    environment:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_HOST: db # Nombre del servicio de la DB
      DB_PORT: 3306
      DB_DATABASE: databse
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy # Espera hasta que el servicio de la DB esté "healthy"

  frontend:
    # No tengo tu Dockerfile, pero aquí va la lógica.
    build:
      context: ./frontend
    container_name: frontend-app
    ports:
      - "5173:5173"
    depends_on:
    - backend

volumes:
  db-data:
    
networks:
  app-network:
    driver: bridge